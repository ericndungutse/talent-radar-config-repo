server:
  port: ${SERVER_PORT}

spring:
  application:
    name: notification-service
  data:
    mongodb:
      uri: ${MONGO_DB_URL}
  kafka:
    bootstrap-servers: ${KAFKA_SERVER}
    consumer:
      group-id: assessment-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring.json.value.default.type: com.talentradar.talentradarnotificationservicerw.domain.events.AssessmentEvent
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    admin:
      properties:
        default.replication.factor: 1

eureka:
  client:
    serviceUrl:
      defaultZone: ${SPRING_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
  instance:
    prefer-ip-address: true
